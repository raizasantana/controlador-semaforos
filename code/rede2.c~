#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <float.h>


int *qtd_neuronio;
double *entrada_01;

double **dado;
double ***peso_recuperado;
double ***peso_salvo;
double ***peso_variacao;

double *saida_esperada;
double *saida_calculada;
double erro_padrao;
double *delta;

// area para guardar os dados do arquivo
typedef struct
{
	int sequencia;
	int *parametro;
	int ordem;
} ENTRADA;

ENTRADA *entrada;

int qtd_registro;
int qtd_camadas;
int *qtd_neuronios;
double momento;
double taxa_aprendizado;
double erro_alvo;
int epoca_global;
int funcao_ativacao_var;
int saida_errada = 0;
FILE *arquivo_01;
char nome_arquivo_02[80]="\0";
char registro[100]="\0";
int tem_log = 0;

time_t tempo;
struct tm *tempo_struct;

int ano, mes, dia, hora, minuto, segundo;
char buffer[256];


int le_entrada() // OK
{
	FILE *arquivo;
	char registro[100]="\0";
	char nome_arquivo[80]="\0";
	int index_01 = 0;
	int aux = 0;
	int index_02 = 0;
	
	/*
	fflush(stdin);
	printf ("Qual o arquivo de entrada:");
	scanf("%s",nome_arquivo);
	
	arquivo = fopen (nome_arquivo, "r");
	
	if (!arquivo)
	{
		printf ("Erro na Abertura do Arquivo %s\n\n",nome_arquivo);

		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Erro na Abertura do Arquivo %s\n\n",nome_arquivo);
		}
		
		return(9);
	}

	for (index_01 = 0; index_01 < 80; index_01++)
	{
		nome_arquivo[index_01] = toupper(nome_arquivo[index_01]);
	}
	
	if (tem_log == 1)
	{
		fprintf (arquivo_01, "Arquivo=%s\n\n",nome_arquivo);
	}

	
	fgets(registro, 80, arquivo);// lendo o 1o. registro do arquivo de entrada
	
	if (!feof(arquivo))
	{ // recuperando os parametros para montagem da rede
		qtd_registro = atoi(strtok(registro,";"));

		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Registros=%d ", qtd_registro);
		}

		qtd_camadas = atoi(strtok(NULL,";"));

		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Camadas=%d ", qtd_camadas);
		}
	
		qtd_neuronios = (int *) calloc (qtd_camadas,sizeof(int));

		for (index_01 = 0; index_01 < qtd_camadas;index_01++)
		{
			qtd_neuronios[index_01] = atoi(strtok(NULL,";"));

			if (tem_log == 1)
			{
				fprintf (arquivo_01, "Neuronios[%d]=%d",index_01+1, qtd_neuronios[index_01]);
			}
		}

		momento = atof (strtok(NULL,";"));
	
		if (tem_log == 1)
		{
			fprintf (arquivo_01, "\n\n");
			fprintf (arquivo_01, "Momento=%f ", momento);
		}

		taxa_aprendizado = atof (strtok(NULL,";"));

		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Tx.Aprendizado=%f ",taxa_aprendizado);
		}

		erro_alvo = atof (strtok(NULL, ";"));

		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Erro=%f ", erro_alvo);
		}

		epoca_global = atoi (strtok(NULL, ";"));
		
		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Epoca=%d ",epoca_global);
		}
	
		funcao_ativacao_var = atoi (strtok(NULL, ";"));
	
		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Funcao Ativacao=%d\n\n",funcao_ativacao_var);
		}
	}
	else
	{
		if (tem_log == 1)
		{
			fprintf (arquivo_01, "Erro na 1a. Leitura do Arquivo%s\n\n",nome_arquivo);
		}

		printf("Problema na 1a. Leitura do %s\n\n",nome_arquivo);
		return(8);
	}
		
	// alocando o espaco necessario para conter os registros de entrada
	entrada = (ENTRADA *) calloc (qtd_registro,sizeof(ENTRADA));

	for (index_01 = 0; index_01 < qtd_registro;index_01++)
		entrada[index_01].parametro = (int *) calloc (qtd_neuronios[index_01], sizeof(int));

	// Carregando os registros de entrada
	/*while (!feof(arquivo))
	{
		fgets(registro, 80, arquivo);

		aux = atoi(strtok(registro, ";"));

		index_01 = aux-1;

		entrada[index_01].sequencia = aux;

		aux = atoi(strtok(NULL, ";"));

		entrada[index_01].parametro[0] = aux;	

		if (qtd_neuronios[0] > 1)
		{
			aux = atoi(strtok(NULL, ";"));
			entrada[index_01].parametro [1] = aux;
		}

		if (qtd_neuronios[0] > 2)
		{
			aux = atoi(strtok(NULL, ";"));
			entrada[index_01].parametro [2] = aux;
		}

		if (qtd_neuronios[0] > 3)
		{
			aux = atoi(strtok(NULL, ";"));
			entrada[index_01].parametro[3] = aux;
		}

		aux = atoi(strtok(NULL, ";"));

		entrada[index_01].ordem = aux;
	}*/

	fclose(arquivo);
	return(0);
}




	

int main()
{
	/*float entrada = 2;
	float saida = 0.;
	char nome_arquivo_01 [80] = "\0";
	char nome_arquivo_02 [80] = "\0";
	char nome_arquivo_aux [80] = "\0";
	
	
	printf("\n\n\nGravar Log do Processamento? (0=Nao / 1=Sim) ");
	scanf("%d", &tem_log);

	recupera_data_hora();
	sprintf (nome_arquivo_aux, "%04d%02d%02d_%02d%02d%02d_",ano, mes, dia, hora, minuto,segundo);

	if (tem_log == 1)
	{
		sprintf (nome_arquivo_02,"%04d%02d%02d_%02d%02d%02d_LOG.TXT",ano, mes, dia, hora,minuto,
segundo);
		arquivo_01 = fopen (nome_arquivo_02, "w");
	}
	
	if (le_entrada()==0)
	{
		inicializa_randomizacao();
		cria_rede();
	
		//strcpy (nome_arquivo_01, nome_arquivo_aux);
		strcat (nome_arquivo_01, "PR.TXT");
		if (tem_log == 1)
		{
			fprintf (arquivo_01,"Peso Recuperado=%s\n\n", nome_arquivo_01);
		}

		recupera_peso(nome_arquivo_01);

		//strcpy (nome_arquivo_01, nome_arquivo_aux);

		strcat (nome_arquivo_01, "DADO_TRE.TXT");
		if (tem_log == 1)
		{
			fprintf (arquivo_01,"Dado Teino=%s\n\n", nome_arquivo_01);
		}
		
		seleciona_massa(nome_arquivo_01, 0.4);
		//strcpy (nome_arquivo_01, nome_arquivo_aux);
		
		strcat (nome_arquivo_01, "DADO_TES.TXT");
		if (tem_log == 1)
		{
			fprintf (arquivo_01,"Dado Teste=%s\n\n", nome_arquivo_01);
		}	
		seleciona_massa(nome_arquivo_01, 0.3);
		
		//strcpy (nome_arquivo_01, nome_arquivo_aux);
		strcat (nome_arquivo_01, "DADO_TRE.TXT");
		strcpy (nome_arquivo_02, nome_arquivo_aux);
		strcat (nome_arquivo_02, "SAIDA_TRE.TXT");
	
		if (tem_log == 1)
		{
			fprintf (arquivo_01,"Saida Treino=%s\n\n", nome_arquivo_02);
		}	
		treina_rede(nome_arquivo_01, nome_arquivo_02);
	
		//p210_Avalia_Rede();
		//treina_rede("RNL-TS.TXT", "RNL-SS.TXT");
		//printf ("%f ", funcao_ativacao(entrada,funcao_ativacao));
		//printf ("%f\n",
		//derivada_funcao_ativacao(entrada,funcao_ativacao));
	}/*
	*/
	fclose(arquivo_01);
	system("PAUSE");
	return;
}
